"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.getAddAuthHandler = void 0;
const add_auth_defaults_applier_1 = require("../utils/add-auth-defaults-applier");
const synthesize_resources_1 = require("../utils/synthesize-resources");
const post_add_auth_meta_update_1 = require("../utils/post-add-auth-meta-update");
const post_add_auth_message_printer_1 = require("../utils/post-add-auth-message-printer");
exports.getAddAuthHandler = (context) => async (request) => {
    const serviceMetadata = require('../../supported-services').supportedServices[request.serviceName];
    const { cfnFilename, defaultValuesFilename, provider } = serviceMetadata;
    let projectName = context.amplify.getProjectConfig().projectName.toLowerCase();
    const disallowedChars = /[^A-Za-z0-9]+/g;
    projectName = projectName.replace(disallowedChars, '');
    const requestWithDefaults = await add_auth_defaults_applier_1.getAddAuthDefaultsApplier(context, defaultValuesFilename, projectName)(request);
    await synthesize_resources_1.getResourceSynthesizer(context, cfnFilename, provider)(requestWithDefaults)
        .then(req => req.resourceName)
        .then(post_add_auth_meta_update_1.getPostAddAuthMetaUpdater(context, { service: requestWithDefaults.serviceName, providerName: provider }))
        .then(post_add_auth_message_printer_1.getPostAddAuthMessagePrinter(context))
        .catch(err => {
        context.print.info(err.stack);
        context.print.error('There was an error adding the auth resource');
        context.usageData.emitError(err);
    });
    return requestWithDefaults.resourceName;
};
//# sourceMappingURL=get-add-auth-handler.js.map