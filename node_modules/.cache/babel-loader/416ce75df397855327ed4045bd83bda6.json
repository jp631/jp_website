{"ast":null,"code":"var _jsxFileName = \"/Users/jpdeveloper/workspace/jp_website/src/ErrorHandler/index.js\";\nimport React from 'react';\n\nclass ErrorBoundary extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      hasError: false\n    };\n  }\n\n  static getDerivedStateFromError(error) {\n    // Update state so the next render will show the fallback UI.\n    return {\n      hasError: true\n    };\n  }\n\n  componentDidCatch(error, errorInfo) {// You can also log the error to an error reporting service\n    //logErrorToMyService(error, errorInfo);\n  }\n\n  render() {\n    if (this.state.hasError) {\n      // You can render any custom fallback UI\n      return /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          display: \"flex\",\n          flexDirection: \"column\",\n          alignItems: \"center\",\n          justifyItems: \"center\",\n          fontSize: \"3rem\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 17\n        }\n      }, \"Something went wrong. Try to reload the page\"), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 17\n        }\n      }, \"If problem insist, please report it below\"), /*#__PURE__*/React.createElement(\"address\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"a\", {\n        href: \"mailto:noEmailYet@gmail.com\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 17\n        }\n      }, \"/\", /*#__PURE__*/React.createElement(Here, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 56\n        }\n      }))));\n    }\n\n    return this.props.children;\n  }\n\n}\n\nexport default ErrorBoundary;","map":{"version":3,"sources":["/Users/jpdeveloper/workspace/jp_website/src/ErrorHandler/index.js"],"names":["React","ErrorBoundary","Component","constructor","props","state","hasError","getDerivedStateFromError","error","componentDidCatch","errorInfo","render","display","flexDirection","alignItems","justifyItems","fontSize","children"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,aAAN,SAA4BD,KAAK,CAACE,SAAlC,CAA4C;AACxCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AAAEC,MAAAA,QAAQ,EAAE;AAAZ,KAAb;AACD;;AAED,SAAOC,wBAAP,CAAgCC,KAAhC,EAAuC;AACrC;AACA,WAAO;AAAEF,MAAAA,QAAQ,EAAE;AAAZ,KAAP;AACD;;AAEDG,EAAAA,iBAAiB,CAACD,KAAD,EAAQE,SAAR,EAAmB,CAClC;AACA;AACD;;AAEDC,EAAAA,MAAM,GAAG;AACP,QAAI,KAAKN,KAAL,CAAWC,QAAf,EAAyB;AACvB;AACA,0BACI;AAAK,QAAA,KAAK,EAAE;AACRM,UAAAA,OAAO,EAAE,MADD;AAERC,UAAAA,aAAa,EAAE,QAFP;AAGRC,UAAAA,UAAU,EAAE,QAHJ;AAIRC,UAAAA,YAAY,EAAE,QAJN;AAKRC,UAAAA,QAAQ,EAAE;AALF,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAQI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wDARJ,eASI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qDATJ,eAUI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACA;AAAG,QAAA,IAAI,EAAC,6BAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAAuC,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAvC,CADA,CAVJ,CADJ;AAiBD;;AAED,WAAO,KAAKZ,KAAL,CAAWa,QAAlB;AACD;;AAvCuC;;AA0C1C,eAAehB,aAAf","sourcesContent":["import React from 'react';\n\nclass ErrorBoundary extends React.Component {\n    constructor(props) {\n      super(props);\n      this.state = { hasError: false };\n    }\n  \n    static getDerivedStateFromError(error) {\n      // Update state so the next render will show the fallback UI.\n      return { hasError: true };\n    }\n  \n    componentDidCatch(error, errorInfo) {\n      // You can also log the error to an error reporting service\n      //logErrorToMyService(error, errorInfo);\n    }\n  \n    render() {\n      if (this.state.hasError) {\n        // You can render any custom fallback UI\n        return (\n            <div style={{\n                display: \"flex\",\n                flexDirection: \"column\",\n                alignItems: \"center\",\n                justifyItems: \"center\",\n                fontSize: \"3rem\",\n\n            }}>\n                <p>Something went wrong. Try to reload the page</p>\n                <p>If problem insist, please report it below</p>\n                <address>\n                <a href=\"mailto:noEmailYet@gmail.com\">/<Here/></a>\n                </address>\n\n            </div>\n            );\n      }\n  \n      return this.props.children; \n    }\n  }\n\n  export default ErrorBoundary;"]},"metadata":{},"sourceType":"module"}